<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>整理对this请求的理解</title>
      <link href="/2020/07/18/zheng-li-dui-https-xie-yi-de-li-jie/"/>
      <url>/2020/07/18/zheng-li-dui-https-xie-yi-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="this关键字指向问题"><a href="#this关键字指向问题" class="headerlink" title="this关键字指向问题"></a>this关键字指向问题</h1><h2 id="this在各个场景下表示什么值"><a href="#this在各个场景下表示什么值" class="headerlink" title="this在各个场景下表示什么值"></a>this在各个场景下表示什么值</h2><ul><li>1.首先是在全局环境中的this.在全局环境中。this指向window对象;如：<br><code>alert(this)  //控制台输出（object.window）</code><br><code>alert(this === window);   // true</code>  </li><li>2.事件处理中的this 在事件处理函数中，this指向当前节点，就是说绑定事件的那个节点;  </li><li>3  构造函数中的this 构造函数中，this指向被创建的对象<br><img src="https://cdn.jsdelivr.net/gh/lucy-zheng123/cdn@1.1/images/lading.gif" data-original="https://i.loli.net/2020/07/18/nkVZyKPMCOYRzgm.png" alt=""><br>可以清楚发现调用者是谁this就指向谁，如果是自己调用则是参考1指向全局变量 <h2 id="改变指向问题"><a href="#改变指向问题" class="headerlink" title="改变指向问题"></a>改变指向问题</h2></li><li>了解了this的基本指向我们再来看看函数对象的call()、apply() 方法(这些方法原理上是改变了this的指向对象)<br>函数作为对象提供了call()，apply() 方法，他们也可以用来调用函数，这两个方法都接受一个对象作为参数，用来指定本次调用时函数中this的指向；</li></ul><p>call()方法<br>call方法使用的语法规则<br>函数名称.call(obj,arg1,arg2…argN);<br>参数说明:<br>obj:函数内this要指向的对象（像上面的student我可以改成其他对象））<br>arg1,arg2…argN :参数列表，参数与参数之间使用一个逗号隔开<br><img src="https://cdn.jsdelivr.net/gh/lucy-zheng123/cdn@1.1/images/lading.gif" data-original="https://i.loli.net/2020/07/18/wzPvl6rOsTDXnbH.png" alt=""><br>apply()方法<br>函数名称.apply(obj,[arg1,arg2…,argN])<br>参数说明:<br>obj :this要指向的对象<br>[arg1,arg2…argN] : 参数列表，要求格式为数组<br><img src="https://cdn.jsdelivr.net/gh/lucy-zheng123/cdn@1.1/images/lading.gif" data-original="https://i.loli.net/2020/07/18/OHxXFGg8ot7sTl4.png" alt="">  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.两者所实现的功能都是改变this指向问题<br>2. 但是区别是 =&gt; call改变的是对象 =&gt; apply改变的是数组;  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 对this理解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建博客</title>
      <link href="/2020/07/17/kuai-su-da-jian-bo-ke/"/>
      <url>/2020/07/17/kuai-su-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="hexo基本搭建"><a href="#hexo基本搭建" class="headerlink" title="hexo基本搭建"></a>hexo基本搭建</h2><ul><li>搭建博客第一步需要安装相关的软件和搭配环境。这里就可以跟着脚本搭建<a href="https://blog.csdn.net/wsmrzx/article/details/81478945" target="_blank" rel="noopener">脚本教程</a>到了这里你发现最基本的hexo已经搭建好在搭建好的hexoblog下执行hexo s 可以在本地查看 hex d 在github上可以查看，到这里第一步基本完成;  </li><li>个人遇到的问题  </li></ul><p>1.在一键生成秘钥的时候（部署到github必备的）这里是跟着脚本进行的结果发现在github那边显示需要自行加入秘钥。然后跟着提示进行操作拿到秘钥再通过命令<br><code>./install.sh git_ssh</code><br> 输入3成功连接 到这里第一步完成  </p><hr><h2 id="hexo-ui框架库matery主题"><a href="#hexo-ui框架库matery主题" class="headerlink" title="hexo ui框架库matery主题"></a>hexo ui框架库matery主题</h2><ul><li>然后在通过<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">这个网站</a>(matery官网)按照要求进行配置。主要git clone 的相关文件要放在them中。在hexoblog里面的_config.yml配置文件进行修改可以通过ctrl+f进行查找（这里用的是vscode工具）<br>找到并进行修改<code>theme: hexo-theme-matery</code><br>跟着github每步进行操作操作完执行<code>hexo clean &amp;&amp; hexo g &amp;&amp;hexo s</code>到这一步可以看到这个主题的基本样式这第二步完成当然可以参考<a href="https://blog.csdn.net/jspnetcn/article/details/104111651" target="_blank" rel="noopener">这篇博客</a>进行修改  </li><li>博客网页基本完成，然后如果想要写文章页面到里面的话在hexoblog 下打开git命令工具执行<code>hexo new &quot;你想写的博客名&quot;</code>然后可以在\hexoblog\source_posts 这个路径看到你生成的md的文件 这个md文件是用Markdown语法这里可以通过<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">Markdown基本语法</a>,<a href="https://blog.csdn.net/wsmrzx/article/details/81478945" target="_blank" rel="noopener">Hexo系列(五)攥写文章</a>,<a href="https://blog.csdn.net/u011732358/article/details/83098211" target="_blank" rel="noopener">Markdown语法</a>进行学习操作<br>然后执行 hexo s 查看成功引入</li></ul><hr><h2 id="matery主题美化"><a href="#matery主题美化" class="headerlink" title="matery主题美化"></a>matery主题美化</h2><ul><li>这个网上有很多资料可以查看进行修改<a href="https://zhuanlan.zhihu.com/p/69211731" target="_blank" rel="noopener">hexo博客美化集合</a>,<a href="https://www.jianshu.com/p/a664545f155c" target="_blank" rel="noopener">hexo博客主题优化</a>，<a href="https://blog.csdn.net/cungudafa/article/details/106278206" target="_blank" rel="noopener">hexo博客细节优化</a>,<a href="https://fei.bar/2019/10/25/zhu-ti-zhe-teng-ji-lu/#%E5%9B%9B%E3%80%81%E4%BF%AE%E6%94%B9%E4%BA%86%E7%BD%91%E7%AB%99%E5%90%8D%E7%A7%B0%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2" target="_blank" rel="noopener">主题颜色优化</a>跟着操作基本可以可以美化主题：  </li></ul><p> 1.遇到问题  写看板娘的时候出无法进行修改。然后通过知乎上一篇忘了在哪里的，不过要注意的是引入看板娘后要进行clean 从新编译比较好<br> 2.引入插件容易出现不兼容导致 hexo s 出现错误要小心，建议每次执行完都 hexo s 一下，容易定位出错的地方<br> 3.对于图片处理不是很好，修改图片大小以及背景色，发现图片格式得改为gif才会去除背景色，不然默认是白色背景</p><ul><li>美化所需的图片网站这里推荐一个免费看图<a href="https://alphacoders.com/" target="_blank" rel="noopener">看图地址</a>,还有需要进行图片修改的可以<a href="http://xiuxiu.web.meitu.com/main.html" target="_blank" rel="noopener">美图秀秀</a>进行操作修改;  </li></ul><hr><h1 id="cdn加速问题"><a href="#cdn加速问题" class="headerlink" title="cdn加速问题"></a>cdn加速问题</h1><h2 id="github-jsDelivr搭建免费cdn"><a href="#github-jsDelivr搭建免费cdn" class="headerlink" title="github+jsDelivr搭建免费cdn"></a>github+jsDelivr搭建免费cdn</h2><ul><li>操作到这一步的时候页面基本成型，在本地跑起来也比较快，不过在线上网站跑的时候速度异常慢，原因是本地图片加载过于缓慢，再加上github服务器在国外，对于国内访问不良好所导致的解决方法：<br>推荐这篇文章<a href="https://cungudafa.gitee.io/post/2a9.html" target="_blank" rel="noopener">搭建自己免费的cdn</a>,非常详细跟着操作就行，做完以后就会有自己的cdn,试着访问速度大大提升。图片加载速度还可以<br><code>git add . &amp;&amp; git commit -m &quot;第一次提交&quot; &amp;&amp; git push</code><br><img src="https://cdn.jsdelivr.net/gh/lucy-zheng123/cdn@1.1/images/lading.gif" data-original="https://i.loli.net/2020/07/18/XvkYwNFZU6Wj1PT.png" alt=""><br>在这里说下怎么把本地图片变成url =&gt;点击这个<a href="https://sm.ms/" target="_blank" rel="noopener">sm</a>轻量免费的图床<br>让图片上传。  </li><li>由于第一次接触cdn我就把它简单理解成把图片挂载在github+lsDelivr这个服务器上，然后把本地的图片路径改成你所对应的<code>https://cdn.jsdelivr.net/gh/</code>后面跟着就是你的github名字加图片所对应的地址  </li><li>还有就是图片懒加载的地址是放在 <code>hexo-theme-matery\source\images</code>这个目录下的;  </li><li>其他一些细节要注意看上面相关文章的点，里面都有详细介绍。 </li><li>再补充一下如果要修改背景音乐的话可以在主配置文件中找到音乐然后里面有提示可以根据提示修改<br><img src="https://cdn.jsdelivr.net/gh/lucy-zheng123/cdn@1.1/images/lading.gif" data-original="https://i.loli.net/2020/07/19/b5tPsXiy4grMJKU.png" alt=""><br>这里插入音乐链接的话我使用的是网易外部链接<a href="https://music.163.com/" target="_blank" rel="noopener">网易pc端</a>里面找到自己喜欢的歌曲然后点生成外链播放器在里面可以看到他会生成一段代码可以把那个链接的id数拷贝过来替代原来的id就可以了;但是如果看到的是由于版权保护，无法生成外链。那就看这篇文章<a href="https://www.cnblogs.com/cstdio1/p/11617357.html" target="_blank" rel="noopener">解决版权保护问题</a>，然后就可以添加啦</li></ul><h2 id="最后个人感受"><a href="#最后个人感受" class="headerlink" title="最后个人感受"></a>最后个人感受</h2><ul><li>总体上还是可以的，就是细节处理不是很好，本来想加入天气插件发现效果不是很好放弃了。而且图片样式没选好，做不成很好看的博客，后续进行修改，总结花了4天时间，前两天疯狂踩坑，这个是第5个成型版本，不过相对的也让我操作娴熟了很多。然后就是第一次写经验的博客很多东西可能解释不是很完善。同时要感谢<a href="https://ling-collab.github.io/2020/071154549.html#vcomments" target="_blank" rel="noopener">于心所善</a>博主提供的文章解释。后续加油努力做得更好！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 总结搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web前端常用网站</title>
      <link href="/2020/07/17/web-qian-duan-chang-yong-wang-zhan/"/>
      <url>/2020/07/17/web-qian-duan-chang-yong-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="前端常用网站"><a href="#前端常用网站" class="headerlink" title="前端常用网站"></a>前端常用网站</h1><h2 id="HTML-amp-CSS"><a href="#HTML-amp-CSS" class="headerlink" title="HTML &amp; CSS"></a>HTML &amp; CSS</h2><ul><li>html5参考手册：<br><a href="https://www.w3school.com.cn/html5/html5_reference.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/html5/html5_reference.asp</a>   </li><li>css3动画：<br><a href="http://css.cuishifeng.cn/" target="_blank" rel="noopener">http://css.cuishifeng.cn/</a>  </li><li>loding动画：<br><a href="https://www.html5tricks.com/demo/css3-loading-cool-styles/index.html" target="_blank" rel="noopener">https://www.html5tricks.com/demo/css3-loading-cool-styles/index.html</a>  </li><li>特效动画库：<br><a href="https://animate.style/" target="_blank" rel="noopener">https://animate.style/</a>  </li><li>css布局<br><a href="https://animate.style/" target="_blank" rel="noopener">https://animate.style/</a>  </li><li>flex布局(基础语法篇)<br><a href="https://www.ruanyifeng.com/blog/2015/07/" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2015/07/</a><br>flex-grammar.html  </li><li>在线练习flex布局<br><a href="http://flexboxfroggy.com/" target="_blank" rel="noopener">http://flexboxfroggy.com/</a>  </li><li>Grid 网格布局<br><a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html</a>  </li></ul><h2 id="JS-amp-ES6"><a href="#JS-amp-ES6" class="headerlink" title="JS &amp; ES6"></a>JS &amp; ES6</h2><ul><li>web学习<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/</a>  </li></ul><ul><li>JavaScript es6语法 （阮一峰）<br><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener">https://es6.ruanyifeng.com/</a>  </li><li>正则<br><a href="https://deerchao.cn/tutorials/regex/regex.htm" target="_blank" rel="noopener">https://deerchao.cn/tutorials/regex/regex.htm</a>  </li><li>可视化正则<br><a href="https://regexper.com/" target="_blank" rel="noopener">https://regexper.com/</a>  </li><li>Typescript<br><a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener">https://www.tslang.cn/docs/home.html</a>    </li><li>有问题搜<br><a href="https://stackoverflow.com/" target="_blank" rel="noopener">https://stackoverflow.com/</a>  </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/16/hello-world/"/>
      <url>/2020/07/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
